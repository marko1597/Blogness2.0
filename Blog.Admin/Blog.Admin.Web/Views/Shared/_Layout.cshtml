@using System.Configuration
@using System.Text
@using ServiceStack.Redis
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Bloggity Administration Tool</title>
    <link rel="icon" href="~/favicon.ico" />

    <!-- #region bootstrap css -->
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/blog-bootstrap.css" rel="stylesheet" />
    <link href="~/Content/font.css" rel="stylesheet" />
    <link href="~/Content/Site.css" rel="stylesheet" />
    <!-- #endregion -->
    <!-- #region css plugins -->
    <link href="~/Content/datepicker.css" rel="stylesheet" />
    <!-- #endregion -->
    <!-- #region modules css -->
    <link href="~/Content/modules/notificationmessage.css" rel="stylesheet" />
    <link href="~/Content/modules/notifications.css" rel="stylesheet" />
    <!-- #endregion -->
    <!-- #region jquery and knockout js -->
    <script src="~/Scripts/modernizr-2.8.3.js"></script>
    <script src="~/Scripts/knockout-3.2.0.js"></script>
    <script src="~/Scripts/jquery-2.1.1.js"></script>
    <!-- #endregion -->
</head>
    <body>
        <!-- #region header navigation bar -->
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a href="@Url.Action("Index", "Home", new { area = "" })" class="navbar-brand">
                        <span class="blog-brand-icon"></span>
                        Bloggity
                    </a>
                </div>
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav">
                        <li>@Html.ActionLink("Home", "Index", "Home")</li>
                        <li>@Html.ActionLink("About", "About", "Home")</li>
                        <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">Administrator <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                <li>@Html.ActionLink("Notifications", "Index", "Notifications")</li>
                                <li>@Html.ActionLink("User Roles", "Index", "UserRole")</li>
                                <li>@Html.ActionLink("User Management", "Index", "Users")</li>
                            </ul>
                        </li>
                    </ul>
                    @Html.Partial("_LoginPartial")
                </div>
            </div>
        </div>
        <!-- #endregion -->

        <div class="container body-content">
            @RenderBody()
        </div>
        
        <!-- #region footer -->
        <div class="footer">
            <div class="container">
                <p>&copy; Bloggity Administration Tool <span id="footer-time" class="label label-primary">@DateTime.Now</span></p>
                <script>
                    $(function() {
                        setInterval(function() {
                            var dateNow = moment().format('MMMM Do YYYY, h:mm:ss a');
                            $("#footer-time").text(dateNow);
                        }, 1000);
                    });
                </script>
            </div>
        </div>
        <!-- #endregion -->

        <!-- #region site configuration objects -->
        <script>
            var configuration =
            {
                blogSockets: "@GetBlogSockets()",
                blogSocketsAvailable: ("@CheckBlogSocketsAvailability()").toLowerCase()
            };

            var socketClientFunctions = {
                publishMessage: "@Blog.Common.Utils.Constants.SocketClientFunctions.PublishMessage.ToString()",
                commentAdded: "@Blog.Common.Utils.Constants.SocketClientFunctions.CommentAdded.ToString()",
                commentLikesUpdate: "@Blog.Common.Utils.Constants.SocketClientFunctions.CommentLikesUpdate.ToString()",
                postLikesUpdate: "@Blog.Common.Utils.Constants.SocketClientFunctions.PostLikesUpdate.ToString()",
                subscribeViewPost: "@Blog.Common.Utils.Constants.SocketClientFunctions.SubscribeViewPost.ToString()",
                unsubscribeViewPost: "@Blog.Common.Utils.Constants.SocketClientFunctions.UnsubscribeViewPost.ToString()",
                wsConnect: "@Blog.Common.Utils.Constants.SocketClientFunctions.WsConnected.ToString()"
            };

            $(function () {
                $('.datepicker').datepicker();

                $(document).ajaxStart(function () {
                    $.blockUI({ message: '<h1>Just a moment...</h1>' });
                });

                $(document).ajaxComplete(function () {
                    $.unblockUI();
                });
            });
        </script>
        <!-- #endregion -->

        <!-- #region socket.io js script -->
        @if (CheckBlogSocketsAvailability())
        {
            <script src="@GetBlogSocketsJs()" type="text/javascript"></script>
        }
        <!-- #endregion -->

        <!-- #region js plugins -->
        <script src="~/Scripts/jquery.blockUI.js"></script>
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
        <script src="~/Scripts/bootstrap.js"></script>
        <script src="~/Scripts/bootstrap-datepicker.js"></script>
        <script src="~/Scripts/moment-with-locales.js"></script>
        <script src="~/Scripts/respond.js"></script>
        <!-- #endregion -->
        @RenderSection("scripts", false)
    </body>
</html>

@functions
{
    public string GetBlogSockets()
    {
        var sb = new StringBuilder();
        sb.Append(ConfigurationManager.AppSettings.Get("BlogSockets"));

        return sb.ToString();
    }

    public string GetBlogSocketsJs()
    {
        var sb = new StringBuilder();
        sb.Append(ConfigurationManager.AppSettings.Get("BlogSockets"));
        sb.Append("socket.io/socket.io.js");

        return sb.ToString();
    }

    /// <summary>
    /// Checks if Redis service is running
    /// </summary>
    /// <returns>Boolean return that tells if Redis service is running</returns>
    public bool CheckBlogSocketsAvailability()
    {
        try
        {
            using (var redisClient = new RedisClient(
                ConfigurationManager.AppSettings.Get("RedisServer"),
                Convert.ToInt32(ConfigurationManager.AppSettings.Get("RedisPort"))))
            {
                redisClient.Echo(string.Empty);
                return true;
            }
        }
        catch
        {
            return false;
        }
    }
}
