@model Blog.Admin.Web.Models.Users.CreateUserViewModel

<div class="form-group @GetVisibiltyByMode()">
    @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group @GetVisibiltyByMode()">
    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group @GetVisibiltyByMode()">
    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control datepicker" })
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.RolesAvailable, new { @class = "control-label col-md-2" })
    <div class="btn-group col-md-10">
        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Select this user's role</button>
        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
            <span class="caret"></span>
            <span class="sr-only">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu" role="menu">
            @foreach (var role in Model.RolesAvailable)
            {
                <li>
                    <a>
                        @Html.RadioButtonFor(b => Model.SelectedRole, role.RoleName)
                        @Html.Label(role.RoleName)
                    </a>
                </li>
            }
        </ul>
    </div>
    <div class="col-md-offset-2 col-md-12">
        @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-danger" })
    </div>
</div>

@functions
{

    private string GetVisibiltyByMode()
    {
        return (ViewBag.Mode != null && ViewBag.Mode == "Create") ? "" : "hidden";
    }

}
