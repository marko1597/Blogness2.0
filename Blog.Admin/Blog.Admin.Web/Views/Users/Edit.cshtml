@model Blog.Admin.Web.Models.Users.UserViewModel

@{
    ViewBag.Title = "Update User Information";
    ViewBag.Mode = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Update User</h2>

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <strong>Error!</strong>
        @if (ViewBag.IdentityMissing != null && ViewBag.IdentityMissing)
        {
            <span>
                ViewBag.ErrorMessage
                <a href="@Url.Action("Map", "Identity", new { id = Model.Id })">Click here to map this user to an identity.</a>
            </span>
        }
        else
        {
            <span>ViewBag.ErrorMessage;</span>
        }
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter the new user information on the form below.</h4>

        <hr />

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Role)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BirthDate, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RolesAvailable, new { @class = "control-label col-md-2" })
            <div class="btn-group col-md-10">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">Select this user's role</button>
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    <span class="caret"></span>
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    @for (var i = 0; i < Model.RolesAvailable.Count; i++)
                    {
                        <li>
                            <a>
                                @Html.RadioButtonFor(b => Model.SelectedRole, Model.RolesAvailable[i].RoleName)
                                @Html.Label(Model.RolesAvailable[i].RoleName)
                                @Html.Hidden("RolesAvailable[" + i + "].RoleName", Model.RolesAvailable[i].RoleName)
                                @Html.Hidden("RolesAvailable[" + i + "].IsSelected", Model.RolesAvailable[i].IsSelected)
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <div class="col-md-offset-2 col-md-12">
                @Html.ValidationMessageFor(model => model.SelectedRole, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit updated user" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
    @Html.ActionLink("Details", "Details", new { id = Model.Id })
</div>
