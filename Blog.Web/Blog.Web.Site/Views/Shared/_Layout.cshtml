@using System.Configuration
@using System.Text
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>@ViewBag.Title - Bloggity</title>
    <link rel="icon" href="~/favicon.ico" />
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,600,700,800,300' rel='stylesheet' type='text/css'>
    @Styles.Render("~/content/css")
    @Styles.Render("~/content/shared")
    @Styles.Render("~/content/header")
    @Styles.Render("~/content/login")
    @Styles.Render("~/content/navigation")
    @Styles.Render("~/content/posts")
    @Styles.Render("~/content/error")
    @Styles.Render("~/content/comments")
    @Styles.Render("~/content/tags")
    @Styles.Render("~/content/cssplugins")
    @Scripts.Render("~/scripts/modernizr")
    <script>
        @*var blogApi = "@Html.Raw(System.Configuration.ConfigurationManager.AppSettings.Get("BlogApi"))";
        var blogRoot = "@Html.Raw(System.Configuration.ConfigurationManager.AppSettings.Get("BlogRoot"))";*@
        var blogConfiguration =
        {
            blogApi: "@GetBlogApi()",
            blogRoot: "@GetBlogRoot()",
            hubUrl: "@GetHubUrl()",
            templatesUrl: "@GetTemplatesPath()",
            templatesModulesUrl: "@GetTemplatesPath()/modules/",
            displayMode: "desktop"
        };
        console.log(blogConfiguration);
    </script>
</head>
<body ng-app="blog" window-resize>
    @RenderBody()

    @Scripts.Render("~/scripts/jquery")
    @Scripts.Render("~/scripts/jqueryui")
    @Scripts.Render("~/scripts/jqueryplugins")
    @Scripts.Render("~/scripts/jsplugins")
    <script src="@GetHubUrl()/hubs"></script>
    @Scripts.Render("~/scripts/bootstrap")
    @Scripts.Render("~/scripts/angular")
    @Scripts.Render("~/scripts/angularplugins")
    @Scripts.Render("~/scripts/blog")
    @Scripts.Render("~/scripts/config")
    @Scripts.Render("~/scripts/error")
    @Scripts.Render("~/scripts/shared")
    @Scripts.Render("~/scripts/logger")
    @Scripts.Render("~/scripts/header")
    @Scripts.Render("~/scripts/tags")
    @Scripts.Render("~/scripts/login")
    @Scripts.Render("~/scripts/user")
    @Scripts.Render("~/scripts/navigation")
    @Scripts.Render("~/scripts/posts")
    @Scripts.Render("~/scripts/comments")
    <script>
        $(function () {
            var settings = angular.element(document.querySelector('[ng-app]')).injector().get("configProvider");
            settings.setBlogApiEndpoint(blogConfiguration.blogApi);
            settings.setBlogRoot(blogConfiguration.blogRoot);
            settings.setHubUrl(blogConfiguration.hubUrl);
            settings.setDimensions(window.innerWidth, window.innerHeight);

            // TODO: This is a temporary hack. It should be in its respective module
            ngLogger.provider("$exceptionHandler", {
                $get: function (errorLogService) {
                    return (errorLogService);
                }
            });
        });

        var getDimensionMode = function () {
            var w = window.innerWidth;

            if (w >= 320 && w <= 767) {
                windowDimensions.mode = "mobile";
            } else if (w >= 768 && w <= 1024) {
                windowDimensions.mode = "tablet";
            } else if (w > 1024) {
                windowDimensions.mode = "desktop";
            }
        };
    </script>

    @RenderSection("scripts", false)
</body>
</html>
@functions
{
    public string GetHubUrl()
    {
        return Request.ApplicationPath + "/signalr";
    }

    public string GetTemplatesPath()
    {
        return Request.ApplicationPath + "/scripts/templates/";
    }

    public string GetBlogApi()
    {
        var sb = new StringBuilder();
        sb.Append("https://");
        sb.Append(Request.Headers["Host"]);
        sb.Append("/blogapi/api/");

        return sb.ToString();
    }

    public string GetBlogRoot()
    {
        var sb = new StringBuilder();
        sb.Append("https://");
        sb.Append(Request.Headers["Host"]);
        sb.Append("/blog/");

        return sb.ToString();
    }
}